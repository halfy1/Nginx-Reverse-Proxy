# Main application server
server {
    listen 80;
    server_name localhost app.local;

    # General rate limiting for the entire server
    limit_req zone=general_limit burst=100 nodelay;

    # ===================================
    # APP1 (Flask) - Static Files
    # ===================================
    location /app1/static/ {
        alias /var/www/app1/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
        
        # Enable CORS for static assets if needed
        # add_header Access-Control-Allow-Origin "*";
    }

    location /app1/media/ {
        alias /var/www/app1/media/;
        expires 6M;
        add_header Cache-Control "public";
        access_log off;
    }

    # ===================================
    # APP1 (Flask) - Health Check
    # ===================================
    location /app1/health {
        access_log off;
        proxy_pass http://app1_backend/health;
        
        # Shorter timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
    }

    # ===================================
    # APP1 (Flask) - Main Application
    # ===================================
    location /app1/ {
        # Proxy caching
        proxy_cache app1_cache;
        proxy_cache_key $scheme$request_method$host$request_uri;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;

        # Proxy pass - note the trailing slash removes /app1/ prefix
        proxy_pass http://app1_backend/;

        # Buffering settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # ===================================
    # APP2 (Node.js) - Static Files
    # ===================================
    location /app2/static/ {
        alias /var/www/app2/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }

    # ===================================
    # APP2 (Node.js) - Health Check
    # ===================================
    location /app2/health {
        access_log off;
        proxy_pass http://app2_backend/health;
        
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
    }

    # ===================================
    # APP2 (Node.js) - API with Rate Limiting
    # ===================================
    location /app2/api/ {
        # Strict rate limiting for API endpoints
        limit_req zone=api_limit burst=10 nodelay;
        limit_req_status 429;

        # Aggressive caching for API
        proxy_cache app2_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
        proxy_cache_valid 200 1m;
        proxy_cache_methods GET HEAD;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Cache-Status $upstream_cache_status;

        # Proxy to load balanced backend
        proxy_pass http://app2_backend/api/;
        
        # Disable buffering for API (real-time responses)
        proxy_buffering off;
    }

    # ===================================
    # APP2 (Node.js) - Main Application
    # ===================================
    location /app2/ {
        # Proxy to load balanced backend
        proxy_pass http://app2_backend/;

        # Enable WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # ===================================
    # Root redirect
    # ===================================
    location = / {
        return 302 /app1/;
    }

    # ===================================
    # Security: Block hidden files
    # ===================================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ===================================
    # Custom error pages
    # ===================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        return 404 "Not Found";
    }
    
    location = /50x.html {
        internal;
        return 500 "Internal Server Error";
    }
}

# ===================================
# Monitoring Server (Internal only)
# ===================================
server {
    listen 8080;
    server_name _;
    
    # Nginx status endpoint
    location /nginx_status {
        stub_status on;
        access_log off;
    }
    
    # Health check for the proxy itself
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}

# ===================================
# HTTPS Configuration (Commented - Add SSL certs to enable)
# ===================================
# server {
#     listen 443 ssl http2;
#     server_name localhost app.local;
#
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     # Same locations as HTTP server above
#     # ... (copy all location blocks)
# }