version: '3.8'

services:
  nginx:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Internal monitoring port
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf.d/:/etc/nginx/conf.d/:ro
      - ./app1/static:/var/www/app1/static:ro
      - ./app2/static:/var/www/app2/static:ro
      - ./logs/nginx:/var/log/nginx
      - nginx_cache:/var/cache/nginx
    depends_on:
      - app1
      - app2
      - app2_instance2
      - app2_instance3
    networks:
      - nginx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  app1:
    build: 
      context: ./app1
      dockerfile: Dockerfile
    container_name: app1-flask
    expose:
      - "5000"
    environment:
      - FLASK_ENV=development
      - APP_PORT=5000
    volumes:
      - ./app1:/app
    networks:
      - nginx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  app2:
    build:
      context: ./app2
      dockerfile: Dockerfile
    container_name: app2-node-1
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
      - INSTANCE_ID=1
      - APP_PORT=3000
    volumes:
      - ./app2:/app
      - /app/node_modules
    networks:
      - nginx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  app2_instance2:
    build:
      context: ./app2
      dockerfile: Dockerfile
    container_name: app2-node-2
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
      - INSTANCE_ID=2
      - APP_PORT=3000
    volumes:
      - ./app2:/app
      - /app/node_modules
    networks:
      - nginx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  app2_instance3:
    build:
      context: ./app2
      dockerfile: Dockerfile
    container_name: app2-node-3
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
      - INSTANCE_ID=3
      - APP_PORT=3000
    volumes:
      - ./app2:/app
      - /app/node_modules 
    networks:
      - nginx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  nginx-network:
    driver: bridge

volumes:
  nginx_cache:
    driver: local